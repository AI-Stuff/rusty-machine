var searchIndex = {};
searchIndex["rusty_machine"] = {"doc":"# The rusty-machine crate.","items":[[0,"prelude","rusty_machine","The rusty-machine prelude.",null,null],[3,"Matrix","rusty_machine::prelude","The `Matrix` struct.",null,null],[3,"MatrixSlice","","A `MatrixSlice`",null,null],[3,"MatrixSliceMut","","A mutable `MatrixSliceMut`",null,null],[8,"BaseMatrix","","Trait for immutable matrix structs.",null,null],[10,"rows","","Rows in the matrix.",0,null],[10,"cols","","Columns in the matrix.",0,null],[10,"row_stride","","Row stride in the matrix.",0,null],[11,"is_empty","","Returns true if the matrix contais no elements",0,null],[10,"as_ptr","","Top left index of the matrix.",0,null],[11,"as_slice","","Returns a `MatrixSlice` over the whole matrix.",0,null],[11,"get_unchecked","","Get a reference to a point in the matrix without bounds checking.",0,null],[11,"get_row","","Returns the row of a matrix at the given index.\n`None` if the index is out of bounds.",0,null],[11,"get_row_unchecked","","Returns the row of a matrix at the given index without doing unbounds checking",0,null],[11,"iter","","Returns an iterator over the matrix data.",0,null],[11,"iter_rows","","Iterate over the rows of the matrix.",0,null],[11,"iter_diag","","Iterate over diagonal entries",0,null],[11,"sum_rows","","The sum of the rows of the matrix.",0,null],[11,"sum_cols","","The sum of the columns of the matrix.",0,null],[11,"sum","","The sum of all elements in the matrix",0,null],[11,"into_matrix","","Convert the matrix struct into a owned Matrix.",0,null],[11,"select_rows","","Select rows from matrix",0,null],[11,"select_cols","","Select columns from matrix",0,null],[11,"elemul","","The elementwise product of two matrices.",0,null],[11,"elediv","","The elementwise division of two matrices.",0,null],[11,"select","","Select block matrix from matrix",0,null],[11,"hcat","","Horizontally concatenates two matrices. With self on the left.",0,null],[11,"vcat","","Vertically concatenates two matrices. With self on top.",0,null],[11,"diag","","Extract the diagonal of the matrix",0,null],[11,"transpose","","Tranposes the given matrix",0,null],[11,"is_diag","","Checks if matrix is diagonal.",0,null],[11,"solve_u_triangular","","Solves an upper triangular linear system.",0,null],[11,"solve_l_triangular","","Solves a lower triangular linear system.",0,null],[11,"split_at","","Split the matrix at the specified axis returning two `MatrixSlice`s.",0,null],[11,"sub_slice","","Produce a `MatrixSlice` from an existing matrix.",0,null],[8,"BaseMatrixMut","","Trait for mutable matrices.",null,null],[10,"as_mut_ptr","","Top left index of the slice.",1,null],[11,"as_mut_slice","","Returns a `MatrixSliceMut` over the whole matrix.",1,null],[11,"get_unchecked_mut","","Get a mutable reference to a point in the matrix without bounds checks.",1,null],[11,"iter_mut","","Returns a mutable iterator over the matrix.",1,null],[11,"get_row_mut","","Returns a mutable reference to the row of a matrix at the given index.\n`None` if the index is out of bounds.",1,null],[11,"get_row_unchecked_mut","","Returns a mutable reference to the row of a matrix at the given index\nwithout doing unbounds checking",1,null],[11,"swap_rows","","Swaps two rows in a matrix.",1,null],[11,"swap_cols","","Swaps two columns in a matrix.",1,null],[11,"iter_rows_mut","","Iterate over the mutable rows of the matrix.",1,null],[11,"iter_diag_mut","","Iterate over diagonal entries mutably",1,null],[11,"set_to","","Sets the underlying matrix data to the target data.",1,null],[11,"apply","","Applies a function to each element in the matrix.",1,null],[11,"split_at_mut","","Split the matrix at the specified axis returning two `MatrixSliceMut`s.",1,null],[11,"sub_slice_mut","","Produce a `MatrixSliceMut` from an existing matrix.",1,null],[3,"Vector","","The Vector struct.",null,null],[4,"Axes","","Matrix dimensions",null,null],[13,"Row","","The row axis.",2,null],[13,"Col","","The column axis.",2,null],[0,"linalg","rusty_machine","The linear algebra module",null,null],[4,"Axes","rusty_machine::linalg","Matrix dimensions",null,null],[13,"Row","","The row axis.",2,null],[13,"Col","","The column axis.",2,null],[3,"Matrix","","The `Matrix` struct.",null,null],[3,"MatrixSlice","","A `MatrixSlice`",null,null],[3,"MatrixSliceMut","","A mutable `MatrixSliceMut`",null,null],[8,"BaseMatrix","","Trait for immutable matrix structs.",null,null],[10,"rows","","Rows in the matrix.",0,null],[10,"cols","","Columns in the matrix.",0,null],[10,"row_stride","","Row stride in the matrix.",0,null],[11,"is_empty","","Returns true if the matrix contais no elements",0,null],[10,"as_ptr","","Top left index of the matrix.",0,null],[11,"as_slice","","Returns a `MatrixSlice` over the whole matrix.",0,null],[11,"get_unchecked","","Get a reference to a point in the matrix without bounds checking.",0,null],[11,"get_row","","Returns the row of a matrix at the given index.\n`None` if the index is out of bounds.",0,null],[11,"get_row_unchecked","","Returns the row of a matrix at the given index without doing unbounds checking",0,null],[11,"iter","","Returns an iterator over the matrix data.",0,null],[11,"iter_rows","","Iterate over the rows of the matrix.",0,null],[11,"iter_diag","","Iterate over diagonal entries",0,null],[11,"sum_rows","","The sum of the rows of the matrix.",0,null],[11,"sum_cols","","The sum of the columns of the matrix.",0,null],[11,"sum","","The sum of all elements in the matrix",0,null],[11,"into_matrix","","Convert the matrix struct into a owned Matrix.",0,null],[11,"select_rows","","Select rows from matrix",0,null],[11,"select_cols","","Select columns from matrix",0,null],[11,"elemul","","The elementwise product of two matrices.",0,null],[11,"elediv","","The elementwise division of two matrices.",0,null],[11,"select","","Select block matrix from matrix",0,null],[11,"hcat","","Horizontally concatenates two matrices. With self on the left.",0,null],[11,"vcat","","Vertically concatenates two matrices. With self on top.",0,null],[11,"diag","","Extract the diagonal of the matrix",0,null],[11,"transpose","","Tranposes the given matrix",0,null],[11,"is_diag","","Checks if matrix is diagonal.",0,null],[11,"solve_u_triangular","","Solves an upper triangular linear system.",0,null],[11,"solve_l_triangular","","Solves a lower triangular linear system.",0,null],[11,"split_at","","Split the matrix at the specified axis returning two `MatrixSlice`s.",0,null],[11,"sub_slice","","Produce a `MatrixSlice` from an existing matrix.",0,null],[8,"BaseMatrixMut","","Trait for mutable matrices.",null,null],[10,"as_mut_ptr","","Top left index of the slice.",1,null],[11,"as_mut_slice","","Returns a `MatrixSliceMut` over the whole matrix.",1,null],[11,"get_unchecked_mut","","Get a mutable reference to a point in the matrix without bounds checks.",1,null],[11,"iter_mut","","Returns a mutable iterator over the matrix.",1,null],[11,"get_row_mut","","Returns a mutable reference to the row of a matrix at the given index.\n`None` if the index is out of bounds.",1,null],[11,"get_row_unchecked_mut","","Returns a mutable reference to the row of a matrix at the given index\nwithout doing unbounds checking",1,null],[11,"swap_rows","","Swaps two rows in a matrix.",1,null],[11,"swap_cols","","Swaps two columns in a matrix.",1,null],[11,"iter_rows_mut","","Iterate over the mutable rows of the matrix.",1,null],[11,"iter_diag_mut","","Iterate over diagonal entries mutably",1,null],[11,"set_to","","Sets the underlying matrix data to the target data.",1,null],[11,"apply","","Applies a function to each element in the matrix.",1,null],[11,"split_at_mut","","Split the matrix at the specified axis returning two `MatrixSliceMut`s.",1,null],[11,"sub_slice_mut","","Produce a `MatrixSliceMut` from an existing matrix.",1,null],[3,"Vector","","The Vector struct.",null,null],[8,"Metric","","Trait for linear algebra metrics.",null,null],[10,"norm","","Computes the euclidean norm.",3,null],[0,"data","rusty_machine","Module for data handling",null,null],[0,"transforms","rusty_machine::data","The Transforms module",null,null],[0,"minmax","rusty_machine::data::transforms","The Min-Max transformer",null,null],[3,"MinMaxScaler","rusty_machine::data::transforms::minmax","The `MinMaxScaler`",null,null],[11,"fmt","","",4,null],[11,"default","","",4,{"inputs":[],"output":{"name":"minmaxscaler"}}],[11,"new","","Constructs a new MinMaxScaler with the specified scale.",4,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"minmaxscaler"}}],[11,"fit","","",4,null],[11,"transform","","",4,null],[11,"inv_transform","","",4,null],[0,"standardize","rusty_machine::data::transforms","The Standardizing Transformer",null,null],[3,"Standardizer","rusty_machine::data::transforms::standardize","The Standardizer",null,null],[11,"fmt","","",5,null],[11,"default","","",5,{"inputs":[],"output":{"name":"standardizer"}}],[11,"new","","Constructs a new `Standardizer` with the given mean and variance",5,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"standardizer"}}],[11,"fit","","",5,null],[11,"transform","","",5,null],[11,"inv_transform","","",5,null],[0,"shuffle","rusty_machine::data::transforms","The Shuffler",null,null],[3,"Shuffler","rusty_machine::data::transforms::shuffle","The `Shuffler`",null,null],[11,"fmt","","",6,null],[11,"new","","Construct a new `Shuffler` with given random number generator.",6,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[11,"default","","",6,{"inputs":[],"output":{"name":"self"}}],[11,"fit","","",6,null],[11,"transform","","",6,null],[8,"Transformer","rusty_machine::data::transforms","Trait for data transformers",null,null],[10,"fit","","Fit Transformer to input data, and stores the transformation in the Transformer",7,null],[10,"transform","","Transforms the inputs and stores the transformation in the Transformer",7,null],[8,"Invertible","","Trait for invertible data transformers",null,null],[10,"inv_transform","","Maps the inputs using the inverse of the fitted transform.",8,null],[0,"learning","rusty_machine","Module for machine learning.",null,null],[0,"dbscan","rusty_machine::learning","DBSCAN Clustering",null,null],[3,"DBSCAN","rusty_machine::learning::dbscan","DBSCAN Model",null,null],[11,"fmt","","",9,null],[11,"default","","",9,{"inputs":[],"output":{"name":"dbscan"}}],[11,"train","","Train the classifier using input data.",9,null],[11,"predict","","",9,null],[11,"new","","Create a new DBSCAN model with a given\ndistance episilon and minimum points per cluster.",9,{"inputs":[{"name":"f64"},{"name":"usize"}],"output":{"name":"dbscan"}}],[11,"set_predictive","","Set predictive to true if the model is to be used\nto classify future points.",9,null],[11,"clusters","","Return an Option pointing to the model clusters.",9,null],[0,"glm","rusty_machine::learning","Generalized Linear Model module",null,null],[3,"GenLinearModel","rusty_machine::learning::glm","The Generalized Linear Model",null,null],[3,"Logit","","The Logit link function.",null,null],[3,"Log","","The log link function.",null,null],[3,"Identity","","The Identity link function.",null,null],[3,"Bernoulli","","The Bernoulli regression family.",null,null],[3,"Binomial","","The Binomial regression family.",null,null],[3,"Normal","","The Normal regression family.",null,null],[3,"Poisson","","The Poisson regression family.",null,null],[8,"Criterion","","The criterion for the Generalized Linear Model.",null,null],[16,"Link","","The link function of the GLM Criterion.",10,null],[10,"model_variance","","The variance of the regression family.",10,null],[11,"initialize_mu","","Initializes the mean value.",10,null],[11,"compute_working_weight","","Computes the working weights that make up the diagonal\nof the `W` matrix used in the iterative reweighted least squares\nalgorithm.",10,null],[11,"compute_y_bar","","Computes the adjustment to the fitted values used during\nfitting.",10,null],[11,"apply_link_func","","Applies the link function to a vector.",10,null],[11,"apply_link_inv","","Applies the inverse of the link function to a vector.",10,null],[11,"link_grad","","Computes the gradient of the link function.",10,null],[8,"LinkFunc","","Link functions.",null,null],[10,"func","","The link function.",11,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[10,"func_grad","","The gradient of the link function.",11,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[10,"func_inv","","The inverse of the link function.\nOften called the &#39;mean&#39; function.",11,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[11,"fmt","","",12,null],[11,"new","","Constructs a new Generalized Linear Model.",12,{"inputs":[{"name":"c"}],"output":{"name":"genlinearmodel"}}],[11,"predict","","Predict output from inputs.",12,null],[11,"train","","Train the model using inputs and targets.",12,null],[11,"clone","","",13,null],[11,"fmt","","",13,null],[11,"func","","",13,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[11,"func_grad","","",13,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[11,"func_inv","","",13,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[11,"clone","","",14,null],[11,"fmt","","",14,null],[11,"func","","",14,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[11,"func_grad","","",14,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[11,"func_inv","","",14,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[11,"clone","","",15,null],[11,"fmt","","",15,null],[11,"func","","",15,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[11,"func_grad","","",15,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[11,"func_inv","","",15,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[11,"clone","","",16,null],[11,"fmt","","",16,null],[11,"model_variance","","",16,null],[11,"initialize_mu","","",16,null],[11,"compute_working_weight","","",16,null],[11,"compute_y_bar","","",16,null],[11,"fmt","","",17,null],[11,"model_variance","","",17,null],[11,"initialize_mu","","",17,null],[11,"compute_working_weight","","",17,null],[11,"compute_y_bar","","",17,null],[11,"clone","","",18,null],[11,"fmt","","",18,null],[11,"model_variance","","",18,null],[11,"clone","","",19,null],[11,"fmt","","",19,null],[11,"model_variance","","",19,null],[11,"initialize_mu","","",19,null],[11,"compute_working_weight","","",19,null],[0,"gmm","rusty_machine::learning","Gaussian Mixture Models",null,null],[3,"GaussianMixtureModel","rusty_machine::learning::gmm","A Gaussian Mixture Model",null,null],[12,"cov_option","","The covariance options for the GMM.",20,null],[4,"CovOption","","Covariance options for GMMs.",null,null],[13,"Full","","The full covariance structure.",21,null],[13,"Regularized","","Adds a regularization constant to the covariance diagonal.",21,null],[13,"Diagonal","","Only the diagonal covariance structure.",21,null],[11,"clone","","",21,null],[11,"fmt","","",21,null],[11,"fmt","","",20,null],[11,"train","","Train the model using inputs.",20,null],[11,"predict","","Predict output from inputs.",20,null],[11,"new","","Constructs a new Gaussian Mixture Model",20,{"inputs":[{"name":"usize"}],"output":{"name":"gaussianmixturemodel"}}],[11,"with_weights","","Constructs a new GMM with the specified prior mixture weights.",20,{"inputs":[{"name":"usize"},{"name":"vector"}],"output":{"name":"learningresult"}}],[11,"means","","The model means",20,null],[11,"covariances","","The model covariances",20,null],[11,"mixture_weights","","The model mixture weights",20,null],[11,"set_max_iters","","Sets the max number of iterations for the EM algorithm.",20,null],[0,"lin_reg","rusty_machine::learning","Linear Regression module",null,null],[3,"LinRegressor","rusty_machine::learning::lin_reg","Linear Regression Model.",null,null],[11,"fmt","","",22,null],[11,"default","","",22,{"inputs":[],"output":{"name":"linregressor"}}],[11,"parameters","","Get the parameters from the model.",22,null],[11,"train","","Train the linear regression model.",22,null],[11,"predict","","Predict output value from input data.",22,null],[11,"compute_grad","","",22,null],[11,"train_with_optimization","","Train the linear regressor using Gradient Descent.",22,null],[0,"logistic_reg","rusty_machine::learning","Logistic Regression module",null,null],[3,"LogisticRegressor","rusty_machine::learning::logistic_reg","Logistic Regression Model.",null,null],[3,"BaseLogisticRegressor","","The Base Logistic Regression model.",null,null],[11,"fmt","","",23,null],[11,"default","","",23,{"inputs":[],"output":{"name":"logisticregressor"}}],[11,"new","","Constructs untrained logistic regression model.",23,{"inputs":[{"name":"a"}],"output":{"name":"logisticregressor"}}],[11,"parameters","","Get the parameters from the model.",23,null],[11,"train","","Train the logistic regression model.",23,null],[11,"predict","","Predict output value from input data.",23,null],[11,"fmt","","",24,null],[11,"compute_grad","","",24,null],[0,"k_means","rusty_machine::learning","K-means Classification",null,null],[3,"KMeansClassifier","rusty_machine::learning::k_means","K-Means Classification model.",null,null],[3,"Forgy","","The Forgy initialization scheme.",null,null],[3,"RandomPartition","","The Random Partition initialization scheme.",null,null],[3,"KPlusPlus","","The K-means ++ initialization scheme.",null,null],[8,"Initializer","","Trait for algorithms initializing the K-means centroids.",null,null],[10,"init_centroids","","Initialize the centroids for the initial state of the K-Means model.",25,null],[11,"fmt","","",26,null],[11,"predict","","Predict classes from data.",26,null],[11,"train","","Train the classifier using input data.",26,null],[11,"new","","Constructs untrained k-means classifier model.",26,{"inputs":[{"name":"usize"}],"output":{"name":"kmeansclassifier"}}],[11,"new_specified","","Constructs untrained k-means classifier model.",26,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"initalg"}],"output":{"name":"kmeansclassifier"}}],[11,"k","","Get the number of classes.",26,null],[11,"iters","","Get the number of iterations.",26,null],[11,"init_algorithm","","Get the initialization algorithm.",26,null],[11,"centroids","","Get the centroids `Option&lt;Matrix&lt;f64&gt;&gt;`.",26,null],[11,"set_iters","","Set the number of iterations.",26,null],[11,"fmt","","",27,null],[11,"init_centroids","","",27,null],[11,"fmt","","",28,null],[11,"init_centroids","","",28,null],[11,"fmt","","",29,null],[11,"init_centroids","","",29,null],[0,"nnet","rusty_machine::learning","Neural Network module",null,null],[3,"NeuralNet","rusty_machine::learning::nnet","Neural Network Model",null,null],[3,"BaseNeuralNet","","Base Neural Network struct",null,null],[3,"BCECriterion","","The binary cross entropy criterion.",null,null],[3,"MSECriterion","","The mean squared error criterion.",null,null],[8,"Criterion","","Criterion for Neural Networks",null,null],[16,"ActFunc","","The activation function for the criterion.",30,null],[16,"Cost","","The cost function for the criterion.",30,null],[11,"activate","","The activation function applied to a matrix.",30,null],[11,"grad_activ","","The gradient of the activation function applied to a matrix.",30,null],[11,"cost","","The cost function.",30,null],[11,"cost_grad","","The gradient of the cost function.",30,null],[11,"regularization","","Returns the regularization for this criterion.",30,null],[11,"is_regularized","","Checks if the current criterion includes regularization.",30,null],[11,"reg_cost","","Returns the regularization cost for the criterion.",30,null],[11,"reg_cost_grad","","Returns the regularization gradient for the criterion.",30,null],[11,"fmt","","",31,null],[11,"predict","","Predict neural network output using forward propagation.",31,null],[11,"train","","Train the model using gradient optimization and back propagation.",31,null],[11,"default","","Creates a neural network with the specified layer sizes.",31,null],[11,"new","","Create a new neural network with the specified layer sizes.",31,null],[11,"get_net_weights","","Gets matrix of weights between specified layer and forward layer.",31,null],[11,"fmt","","",32,null],[11,"compute_grad","","Compute the gradient of the neural network.",32,null],[11,"clone","","",33,null],[11,"fmt","","",33,null],[11,"regularization","","",33,null],[11,"default","","",33,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a new BCECriterion with the given regularization.",33,{"inputs":[{"name":"regularization"}],"output":{"name":"self"}}],[11,"clone","","",34,null],[11,"fmt","","",34,null],[11,"regularization","","",34,null],[11,"default","","",34,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Constructs a new BCECriterion with the given regularization.",34,{"inputs":[{"name":"regularization"}],"output":{"name":"self"}}],[0,"gp","rusty_machine::learning","Gaussian Processes",null,null],[3,"ConstMean","rusty_machine::learning::gp","Constant mean function",null,null],[3,"GaussianProcess","","Gaussian Process struct",null,null],[12,"noise","","The observation noise of the GP.",35,null],[8,"MeanFunc","","Trait for GP mean functions.",null,null],[10,"func","","Compute the mean function applied elementwise to a matrix.",36,null],[11,"clone","","",37,null],[11,"fmt","","",37,null],[11,"default","","",37,{"inputs":[],"output":{"name":"constmean"}}],[11,"func","","",37,null],[11,"fmt","","",35,null],[11,"default","","",35,{"inputs":[],"output":{"name":"gaussianprocess"}}],[11,"new","","Construct a new Gaussian Process.",35,{"inputs":[{"name":"t"},{"name":"u"},{"name":"f64"}],"output":{"name":"gaussianprocess"}}],[11,"predict","","Predict output from inputs.",35,null],[11,"train","","Train the model using data and outputs.",35,null],[11,"get_posterior","","Compute the posterior distribution [UNSTABLE]",35,null],[0,"svm","rusty_machine::learning","Support Vector Machine Module",null,null],[3,"SVM","rusty_machine::learning::svm","Support Vector Machine",null,null],[12,"optim_iters","","Number of iterations for training.",38,null],[11,"fmt","","",38,null],[11,"default","","",38,{"inputs":[],"output":{"name":"svm"}}],[11,"new","","Constructs an untrained SVM with specified\nkernel and lambda which determins the hardness\nof the margin.",38,{"inputs":[{"name":"k"},{"name":"f64"}],"output":{"name":"svm"}}],[11,"predict","","",38,null],[11,"train","","",38,null],[0,"naive_bayes","rusty_machine::learning","Naive Bayes Classifiers",null,null],[3,"NaiveBayes","rusty_machine::learning::naive_bayes","The Naive Bayes model.",null,null],[3,"Gaussian","","The Gaussian Naive Bayes model distribution.",null,null],[3,"Bernoulli","","The Bernoulli Naive Bayes model distribution.",null,null],[3,"Multinomial","","The Multinomial Naive Bayes model distribution.",null,null],[8,"Distribution","","Naive Bayes Distribution.",null,null],[10,"from_model_params","","Initialize the distribution parameters.",39,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"self"}}],[10,"update_params","","Updates the distribution parameters.",39,null],[10,"joint_log_lik","","Compute the joint log likelihood of the data.",39,null],[11,"fmt","","",40,null],[11,"new","","Create a new NaiveBayes model from a given\ndistribution.",40,{"inputs":[],"output":{"name":"naivebayes"}}],[11,"cluster_count","","Get the cluster count for this model.",40,null],[11,"class_prior","","Get the class prior distribution for this model.",40,null],[11,"distr","","Get the distribution for this model.",40,null],[11,"train","","Train the model using inputs and targets.",40,null],[11,"predict","","Predict output from inputs.",40,null],[11,"get_log_probs","","Get the log-probabilities per class for each input.",40,null],[11,"fmt","","",41,null],[11,"theta","","Returns the distribution means.",41,null],[11,"sigma","","Returns the distribution variances.",41,null],[11,"from_model_params","","",41,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"gaussian"}}],[11,"update_params","","",41,null],[11,"joint_log_lik","","",41,null],[11,"fmt","","",42,null],[11,"log_probs","","The log probability matrix.",42,null],[11,"from_model_params","","",42,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"bernoulli"}}],[11,"update_params","","",42,null],[11,"joint_log_lik","","",42,null],[11,"fmt","","",43,null],[11,"log_probs","","The log probability matrix.",43,null],[11,"from_model_params","","",43,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"multinomial"}}],[11,"update_params","","",43,null],[11,"joint_log_lik","","",43,null],[0,"error","rusty_machine::learning","Error handling for the learning module.",null,null],[3,"Error","rusty_machine::learning::error","An error related to the learning module.",null,null],[4,"ErrorKind","","Types of errors produced in the learning module.",null,null],[13,"InvalidParameters","","The parameters used to define the model are not valid.",44,null],[13,"InvalidData","","The input data to the model is not valid.",44,null],[13,"InvalidState","","The action could not be carried out as the model was in an invalid state.",44,null],[13,"UntrainedModel","","The model has not been trained",44,null],[13,"LinearAlgebra","","Linear algebra related error",44,null],[11,"fmt","","",45,null],[11,"fmt","","",44,null],[11,"new","","Construct a new `Error` of a particular `ErrorKind`.",45,{"inputs":[{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"new_untrained","","Returns a new error for an untrained model",45,{"inputs":[],"output":{"name":"error"}}],[11,"kind","","Get the kind of this `Error`.",45,null],[11,"from","","",45,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"description","","",45,null],[11,"fmt","","",45,null],[0,"optim","rusty_machine::learning","Module for optimization in machine learning setting.",null,null],[0,"grad_desc","rusty_machine::learning::optim","Gradient Descent",null,null],[3,"GradientDesc","rusty_machine::learning::optim::grad_desc","Batch Gradient Descent algorithm",null,null],[3,"StochasticGD","","Stochastic Gradient Descent algorithm.",null,null],[3,"AdaGrad","","Adaptive Gradient Descent",null,null],[3,"RMSProp","","RMSProp",null,null],[11,"clone","","",46,null],[11,"fmt","","",46,null],[11,"default","","",46,{"inputs":[],"output":{"name":"gradientdesc"}}],[11,"new","","Construct a gradient descent algorithm.",46,{"inputs":[{"name":"f64"},{"name":"usize"}],"output":{"name":"gradientdesc"}}],[11,"optimize","","",46,null],[11,"clone","","",47,null],[11,"fmt","","",47,null],[11,"default","","",47,{"inputs":[],"output":{"name":"stochasticgd"}}],[11,"new","","Construct a stochastic gradient descent algorithm.",47,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"usize"}],"output":{"name":"stochasticgd"}}],[11,"optimize","","",47,null],[11,"fmt","","",48,null],[11,"new","","Constructs a new AdaGrad algorithm.",48,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"usize"}],"output":{"name":"adagrad"}}],[11,"default","","",48,{"inputs":[],"output":{"name":"adagrad"}}],[11,"optimize","","",48,null],[11,"fmt","","",49,null],[11,"clone","","",49,null],[11,"default","","",49,{"inputs":[],"output":{"name":"rmsprop"}}],[11,"new","","Construct an RMSProp algorithm.",49,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"usize"}],"output":{"name":"rmsprop"}}],[11,"optimize","","",49,null],[0,"fmincg","rusty_machine::learning::optim","Module for the fmincg optimization algorithm.",null,null],[3,"ConjugateGD","rusty_machine::learning::optim::fmincg","Conjugate Gradient Descent algorithm",null,null],[12,"rho","","Constant in the Wolfe-Powell conditions.",50,null],[12,"sig","","Constant in the Wolfe-Powell conditions.",50,null],[12,"int","","Don&#39;t reevaluate within `int` of the limit of the current bracket.",50,null],[12,"ext","","Extrapolate max of `ext` times the current bracket.",50,null],[12,"max","","Max of `max` function evaluations per line search",50,null],[12,"ratio","","The maximum allowed slope ratio",50,null],[12,"iters","","The default number of max iterations.",50,null],[11,"clone","","",50,null],[11,"fmt","","",50,null],[11,"default","","",50,{"inputs":[],"output":{"name":"conjugategd"}}],[11,"optimize","","",50,null],[8,"Optimizable","rusty_machine::learning::optim","Trait for models which can be gradient-optimized.",null,null],[16,"Inputs","","The input data type to the model.",51,null],[16,"Targets","","The target data type to the model.",51,null],[10,"compute_grad","","Compute the gradient for the model.",51,null],[8,"OptimAlgorithm","","Trait for optimization algorithms.",null,null],[10,"optimize","","Return the optimized parameter using gradient optimization.",52,null],[0,"toolkit","rusty_machine::learning","Module for learning tools.",null,null],[0,"activ_fn","rusty_machine::learning::toolkit","Activation Functions.",null,null],[3,"Sigmoid","rusty_machine::learning::toolkit::activ_fn","Sigmoid activation function.",null,null],[3,"Linear","","Linear activation function.",null,null],[3,"Exp","","Exponential activation function.",null,null],[8,"ActivationFunc","","Trait for activation functions in models.",null,null],[10,"func","","The activation function.",53,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[10,"func_grad","","The gradient of the activation function.",53,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[10,"func_inv","","The inverse of the activation function.",53,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[11,"clone","","",54,null],[11,"fmt","","",54,null],[11,"func","","Sigmoid function.",54,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[11,"func_grad","","Gradient of sigmoid function.",54,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[11,"func_inv","","",54,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[11,"clone","","",55,null],[11,"fmt","","",55,null],[11,"func","","",55,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[11,"func_grad","","",55,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[11,"func_inv","","",55,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[11,"clone","","",56,null],[11,"fmt","","",56,null],[11,"func","","",56,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[11,"func_grad","","",56,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[11,"func_inv","","",56,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[0,"cost_fn","rusty_machine::learning::toolkit","Cost Functions.",null,null],[3,"MeanSqError","rusty_machine::learning::toolkit::cost_fn","The mean squared error cost function.",null,null],[3,"CrossEntropyError","","The cross entropy error cost function.",null,null],[8,"CostFunc","","Trait for cost functions in models.",null,null],[10,"cost","","The cost function.",57,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"f64"}}],[10,"grad_cost","","The gradient of the cost function.",57,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[11,"clone","","",58,null],[11,"fmt","","",58,null],[11,"cost","","",58,{"inputs":[{"name":"matrix"},{"name":"matrix"}],"output":{"name":"f64"}}],[11,"grad_cost","","",58,{"inputs":[{"name":"matrix"},{"name":"matrix"}],"output":{"name":"matrix"}}],[11,"cost","","",58,{"inputs":[{"name":"vector"},{"name":"vector"}],"output":{"name":"f64"}}],[11,"grad_cost","","",58,{"inputs":[{"name":"vector"},{"name":"vector"}],"output":{"name":"vector"}}],[11,"clone","","",59,null],[11,"fmt","","",59,null],[11,"cost","","",59,{"inputs":[{"name":"matrix"},{"name":"matrix"}],"output":{"name":"f64"}}],[11,"grad_cost","","",59,{"inputs":[{"name":"matrix"},{"name":"matrix"}],"output":{"name":"matrix"}}],[11,"cost","","",59,{"inputs":[{"name":"vector"},{"name":"vector"}],"output":{"name":"f64"}}],[11,"grad_cost","","",59,{"inputs":[{"name":"vector"},{"name":"vector"}],"output":{"name":"vector"}}],[0,"kernel","rusty_machine::learning::toolkit","Module for kernels",null,null],[3,"KernelSum","rusty_machine::learning::toolkit::kernel","The sum of two kernels",null,null],[3,"KernelProd","","The pointwise product of two kernels",null,null],[3,"KernelArith","","A wrapper tuple struct used for kernel arithmetic",null,null],[12,"0","","",60,null],[3,"Linear","","The Linear Kernel",null,null],[12,"c","","Constant term added to inner product.",61,null],[3,"Polynomial","","The Polynomial Kernel",null,null],[12,"alpha","","Scaling of the inner product.",62,null],[12,"c","","Constant added to inner product.",62,null],[12,"d","","The power to raise the sum to.",62,null],[3,"SquaredExp","","Squared exponential kernel",null,null],[12,"ls","","The length scale of the kernel.",63,null],[12,"ampl","","The amplitude of the kernel.",63,null],[3,"Exponential","","The Exponential Kernel",null,null],[12,"ls","","The length scale of the kernel.",64,null],[12,"ampl","","The amplitude of the kernel.",64,null],[3,"HyperTan","","The Hyperbolic Tangent Kernel.",null,null],[12,"alpha","","The scaling of the inner product.",65,null],[12,"c","","The constant to add to the inner product.",65,null],[3,"Multiquadric","","The Multiquadric Kernel.",null,null],[12,"c","","Constant added to square of difference.",66,null],[3,"RationalQuadratic","","The Rational Quadratic Kernel.",null,null],[12,"alpha","","Controls inverse power and difference scale.",67,null],[12,"ls","","Length scale controls scale of difference.",67,null],[8,"Kernel","","The Kernel trait",null,null],[10,"kernel","","The kernel function.",68,null],[11,"fmt","","",69,null],[11,"kernel","","",69,null],[11,"fmt","","",70,null],[11,"kernel","","",70,null],[11,"fmt","","",60,null],[11,"add","","",60,null],[11,"mul","","",60,null],[11,"clone","","",61,null],[11,"fmt","","",61,null],[11,"new","","Constructs a new Linear Kernel.",61,{"inputs":[{"name":"f64"}],"output":{"name":"linear"}}],[11,"default","","",61,{"inputs":[],"output":{"name":"linear"}}],[11,"kernel","","",61,null],[11,"clone","","",62,null],[11,"fmt","","",62,null],[11,"new","","Constructs a new Polynomial Kernel.",62,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"polynomial"}}],[11,"default","","",62,{"inputs":[],"output":{"name":"polynomial"}}],[11,"kernel","","",62,null],[11,"clone","","",63,null],[11,"fmt","","",63,null],[11,"new","","Construct a new squared exponential kernel.",63,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"squaredexp"}}],[11,"default","","",63,{"inputs":[],"output":{"name":"squaredexp"}}],[11,"kernel","","The squared exponential kernel function.",63,null],[11,"clone","","",64,null],[11,"fmt","","",64,null],[11,"new","","Construct a new squared exponential kernel.",64,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"exponential"}}],[11,"default","","",64,{"inputs":[],"output":{"name":"exponential"}}],[11,"kernel","","The squared exponential kernel function.",64,null],[11,"clone","","",65,null],[11,"fmt","","",65,null],[11,"new","","Constructs a new Hyperbolic Tangent Kernel.",65,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"hypertan"}}],[11,"default","","",65,{"inputs":[],"output":{"name":"hypertan"}}],[11,"kernel","","",65,null],[11,"clone","","",66,null],[11,"fmt","","",66,null],[11,"new","","Constructs a new Multiquadric Kernel.",66,{"inputs":[{"name":"f64"}],"output":{"name":"multiquadric"}}],[11,"default","","",66,{"inputs":[],"output":{"name":"multiquadric"}}],[11,"kernel","","",66,null],[11,"clone","","",67,null],[11,"fmt","","",67,null],[11,"new","","Constructs a new Rational Quadratic Kernel.",67,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"rationalquadratic"}}],[11,"default","","",67,{"inputs":[],"output":{"name":"rationalquadratic"}}],[11,"kernel","","",67,null],[0,"rand_utils","rusty_machine::learning::toolkit","Utility functions for random functionality.",null,null],[5,"reservoir_sample","rusty_machine::learning::toolkit::rand_utils","```\nuse rusty_machine::learning::toolkit::rand_utils;",null,null],[5,"fisher_yates","","The inside out Fisher-Yates algorithm.",null,null],[5,"in_place_fisher_yates","","The in place Fisher-Yates shuffle.",null,null],[0,"regularization","rusty_machine::learning::toolkit","Regularization Module",null,null],[4,"Regularization","rusty_machine::learning::toolkit::regularization","Model Regularization",null,null],[13,"L1","","L1 Regularization",71,null],[13,"L2","","L2 Regularization",71,null],[13,"ElasticNet","","Elastic Net Regularization (L1 and L2)",71,null],[13,"None","","No Regularization",71,null],[11,"fmt","","",71,null],[11,"clone","","",71,null],[11,"reg_cost","","Compute the regularization addition to the cost.",71,null],[11,"reg_grad","","Compute the regularization addition to the gradient.",71,null],[6,"LearningResult","rusty_machine::learning","A new type which provides clean access to the learning errors",null,null],[8,"SupModel","","Trait for supervised model.",null,null],[10,"predict","","Predict output from inputs.",72,null],[10,"train","","Train the model using inputs and targets.",72,null],[8,"UnSupModel","","Trait for unsupervised model.",null,null],[10,"predict","","Predict output from inputs.",73,null],[10,"train","","Train the model using inputs.",73,null],[0,"stats","rusty_machine","Module for computational statistics",null,null],[0,"dist","rusty_machine::stats","Module for statistical distributions.",null,null],[0,"exponential","rusty_machine::stats::dist","Exponential distribution module.",null,null],[3,"Exponential","rusty_machine::stats::dist::exponential","An Exponential random variable.",null,null],[11,"fmt","","",74,null],[11,"clone","","",74,null],[11,"default","","",74,{"inputs":[],"output":{"name":"exponential"}}],[11,"new","","Constructs a new Exponential random variable with given\nlambda parameter.",74,{"inputs":[{"name":"f64"}],"output":{"name":"exponential"}}],[11,"lambda","","Returns the lambda parameter.",74,null],[11,"pdf","","The pdf of the exponential distribution.",74,null],[11,"logpdf","","The log pdf of the exponential distribution.",74,null],[11,"cdf","","The cdf of the exponential distribution.",74,null],[11,"sample","","",74,null],[11,"ind_sample","","",74,null],[0,"gaussian","rusty_machine::stats::dist","Gaussian distribution module.",null,null],[3,"Gaussian","rusty_machine::stats::dist::gaussian","A Gaussian random variable.",null,null],[11,"fmt","","",75,null],[11,"clone","","",75,null],[11,"default","","",75,{"inputs":[],"output":{"name":"gaussian"}}],[11,"new","","Creates a new Gaussian random variable from\na given mean and variance.",75,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"gaussian"}}],[11,"from_std_dev","","Creates a new Gaussian random variable from\na given mean and standard deviation.",75,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"gaussian"}}],[11,"pdf","","The pdf of the normal distribution",75,null],[11,"logpdf","","The log pdf of the normal distribution.",75,null],[11,"cdf","","Rough estimate for the cdf of the gaussian distribution.\nAccurate to 0.003.",75,null],[11,"sample","","",75,null],[11,"ind_sample","","",75,null],[0,"consts","rusty_machine::stats::dist","Statistical constants",null,null],[17,"SQRT_2_PI","rusty_machine::stats::dist::consts","Sqrt(2 * pi)",null,null],[17,"LN_2_PI","","Ln(2 * pi)",null,null],[8,"Distribution","rusty_machine::stats::dist","Trait for statistical distributions.",null,null],[10,"pdf","","The pdf of the distribution.",76,null],[11,"logpdf","","The logpdf of the distribution.",76,null],[10,"cdf","","The cdf of the distribution.",76,null],[0,"analysis","rusty_machine","Module for evaluating models.",null,null],[0,"confusion_matrix","rusty_machine::analysis","Module to compute the confusion matrix of a set of predictions.",null,null],[5,"confusion_matrix","rusty_machine::analysis::confusion_matrix","Returns a square matrix C where C_ij is the count of the samples which were\npredicted to lie in the class with jth label but actually lie in the class with\nith label.",null,null],[0,"cross_validation","rusty_machine::analysis","Module for performing cross-validation of models.",null,null],[5,"k_fold_validate","rusty_machine::analysis::cross_validation","Randomly splits the inputs into k &#39;folds&#39;. For each fold a model\nis trained using all inputs except for that fold, and tested on the\ndata in the fold. Returns the scores for each fold.",null,{"inputs":[{"name":"m"},{"name":"matrix"},{"name":"matrix"},{"name":"usize"},{"name":"s"}],"output":{"name":"learningresult"}}],[0,"score","rusty_machine::analysis","Functions for scoring a set of predictions, i.e. evaluating\nhow close predictions and truth are. All functions in this\nmodule obey the convention that higher is better.",null,null],[5,"accuracy","rusty_machine::analysis::score","Returns the fraction of outputs which match their target.",null,{"inputs":[{"name":"i"},{"name":"i"}],"output":{"name":"f64"}}],[5,"row_accuracy","","Returns the fraction of outputs rows which match their target.",null,{"inputs":[{"name":"matrix"},{"name":"matrix"}],"output":{"name":"f64"}}],[5,"precision","","Returns the precision score for 2 class classification.",null,{"inputs":[{"name":"i"},{"name":"i"}],"output":{"name":"f64"}}],[5,"recall","","Returns the recall score for 2 class classification.",null,{"inputs":[{"name":"i"},{"name":"i"}],"output":{"name":"f64"}}],[5,"f1","","Returns the f1 score for 2 class classification.",null,{"inputs":[{"name":"i"},{"name":"i"}],"output":{"name":"f64"}}],[5,"neg_mean_squared_error","","Returns the additive inverse of the mean-squared-error of the\noutputs. So higher is better, and the returned value is always\nnegative.",null,{"inputs":[{"name":"matrix"},{"name":"matrix"}],"output":{"name":"f64"}}],[0,"datasets","rusty_machine","Module for datasets.",null,null],[3,"Dataset","rusty_machine::datasets","Dataset container",null,null],[0,"iris","","Module for iris dataset.",null,null],[5,"load","rusty_machine::datasets::iris","Load iris dataset.",null,{"inputs":[],"output":{"name":"dataset"}}],[0,"trees","rusty_machine::datasets","Module for trees dataset.",null,null],[5,"load","rusty_machine::datasets::trees","Load trees dataset.",null,{"inputs":[],"output":{"name":"dataset"}}],[11,"clone","rusty_machine::datasets","",77,null],[11,"fmt","","",77,null],[11,"data","","Returns explanatory variable (features)",77,null],[11,"target","","Returns objective variable (target)",77,null],[11,"qr_decomp","rusty_machine::linalg","Compute the QR decomposition of the matrix.",78,null],[11,"cholesky","","Cholesky decomposition",78,null],[11,"bidiagonal_decomp","","Converts matrix to bidiagonal form",78,null],[11,"svd","","Singular Value Decomposition",78,null],[11,"upper_hessenberg","","Returns H, where H is the upper hessenberg form.",78,null],[11,"upper_hess_decomp","","Returns (U,H), where H is the upper hessenberg form\nand U is the unitary transform matrix.",78,null],[11,"lup_decomp","","Computes L, U, and P for LUP decomposition.",78,null],[11,"eigenvalues","","Eigenvalues of a square matrix.",78,null],[11,"eigendecomp","","Eigendecomposition of a square matrix.",78,null],[11,"new","","Constructor for Matrix struct.",78,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"u"}],"output":{"name":"matrix"}}],[11,"from_fn","","Constructor for Matrix struct that takes a function `f`\nand constructs a new matrix such that `A_ij = f(i, j)`,\nwhere `i` is the row index and `j` the column index.",78,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"matrix"}}],[11,"data","","Returns a non-mutable reference to the underlying data.",78,null],[11,"mut_data","","Returns a mutable slice of the underlying data.",78,null],[11,"into_vec","","Consumes the Matrix and returns the Vec of data.",78,null],[11,"zeros","","Constructs matrix of all zeros.",78,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"matrix"}}],[11,"from_diag","","Constructs matrix with given diagonal.",78,null],[11,"ones","","Constructs matrix of all ones.",78,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"matrix"}}],[11,"identity","","Constructs the identity matrix.",78,{"inputs":[{"name":"usize"}],"output":{"name":"matrix"}}],[11,"mean","","The mean of the matrix along the specified axis.",78,null],[11,"variance","","The variance of the matrix along the specified axis.",78,null],[11,"solve","","Solves the equation `Ax = y`.",78,null],[11,"inverse","","Computes the inverse of the matrix.",78,null],[11,"det","","Computes the determinant of the matrix.",78,null],[11,"norm","","Compute euclidean norm for matrix.",78,null],[11,"norm","","Compute euclidean norm for matrix.",79,null],[11,"norm","","Compute euclidean norm for matrix.",80,null],[11,"norm","","Compute euclidean norm for vector.",81,null],[11,"from_iter","","",78,{"inputs":[{"name":"i"}],"output":{"name":"matrix"}}],[11,"rows","","",78,null],[11,"cols","","",78,null],[11,"row_stride","","",78,null],[11,"is_empty","","",78,null],[11,"as_ptr","","",78,null],[11,"into_matrix","","",78,null],[11,"sum","","",78,null],[11,"elemul","","",78,null],[11,"elediv","","",78,null],[11,"vcat","","",78,null],[11,"rows","","",79,null],[11,"cols","","",79,null],[11,"row_stride","","",79,null],[11,"as_ptr","","",79,null],[11,"rows","","",80,null],[11,"cols","","",80,null],[11,"row_stride","","",80,null],[11,"as_ptr","","",80,null],[11,"add_assign","","",78,null],[11,"add_assign","","",78,null],[11,"add_assign","","",80,null],[11,"add_assign","","",80,null],[11,"add_assign","","",78,null],[11,"add_assign","","",78,null],[11,"add_assign","","",80,null],[11,"add_assign","","",80,null],[11,"add_assign","","",80,null],[11,"add_assign","","",80,null],[11,"add_assign","","",80,null],[11,"add_assign","","",80,null],[11,"add_assign","","",78,null],[11,"add_assign","","",78,null],[11,"add_assign","","",78,null],[11,"add_assign","","",78,null],[11,"add_assign","","",81,null],[11,"add_assign","","",81,null],[11,"add_assign","","",81,null],[11,"add_assign","","",81,null],[11,"div_assign","","",78,null],[11,"div_assign","","",78,null],[11,"div_assign","","",80,null],[11,"div_assign","","",80,null],[11,"div_assign","","",81,null],[11,"div_assign","","",81,null],[11,"into","","",81,null],[11,"mul_assign","","",78,null],[11,"mul_assign","","",78,null],[11,"mul_assign","","",80,null],[11,"mul_assign","","",80,null],[11,"mul_assign","","",81,null],[11,"mul_assign","","",81,null],[11,"sub","","",81,null],[11,"sub","","",81,null],[11,"sub","","",81,null],[11,"sub","","",81,null],[11,"sub","","",79,null],[11,"sub","","",79,null],[11,"sub","","",80,null],[11,"sub","","",80,null],[11,"sub","","",78,null],[11,"sub","","",78,null],[11,"sub","","",79,null],[11,"sub","","",79,null],[11,"sub","","",80,null],[11,"sub","","",80,null],[11,"sub","","",79,null],[11,"sub","","",79,null],[11,"sub","","",80,null],[11,"sub","","",80,null],[11,"sub","","",79,null],[11,"sub","","",79,null],[11,"sub","","",78,null],[11,"sub","","",78,null],[11,"sub","","",80,null],[11,"sub","","",80,null],[11,"sub","","",78,null],[11,"sub","","",78,null],[11,"sub","","",78,null],[11,"sub","","",78,null],[11,"clone","","Clones the Matrix.",78,null],[11,"clone","","Clones the Vector.",81,null],[11,"clone","","",2,null],[11,"clone","","",79,null],[11,"hash","","",78,null],[11,"hash","","",81,null],[11,"mul","","",78,null],[11,"mul","","",78,null],[11,"mul","","",78,null],[11,"mul","","",78,null],[11,"mul","","",81,null],[11,"mul","","",81,null],[11,"mul","","",79,null],[11,"mul","","",79,null],[11,"mul","","",80,null],[11,"mul","","",80,null],[11,"mul","","",78,null],[11,"mul","","",78,null],[11,"mul","","",78,null],[11,"mul","","",78,null],[11,"mul","","",79,null],[11,"mul","","",79,null],[11,"mul","","",78,null],[11,"mul","","",78,null],[11,"mul","","",80,null],[11,"mul","","",80,null],[11,"mul","","",79,null],[11,"mul","","",79,null],[11,"mul","","",79,null],[11,"mul","","",79,null],[11,"mul","","",80,null],[11,"mul","","",80,null],[11,"mul","","",80,null],[11,"mul","","",80,null],[11,"as_mut_ptr","","Top left index of the slice.",78,null],[11,"as_mut_ptr","","Top left index of the slice.",80,null],[11,"index","","",78,null],[11,"index","","",81,null],[11,"index","","",79,null],[11,"index","","",80,null],[11,"add","","",81,null],[11,"add","","",81,null],[11,"add","","",81,null],[11,"add","","",81,null],[11,"add","","",79,null],[11,"add","","",79,null],[11,"add","","",80,null],[11,"add","","",80,null],[11,"add","","",78,null],[11,"add","","",78,null],[11,"add","","",79,null],[11,"add","","",79,null],[11,"add","","",80,null],[11,"add","","",80,null],[11,"add","","",79,null],[11,"add","","",79,null],[11,"add","","",80,null],[11,"add","","",80,null],[11,"add","","",79,null],[11,"add","","",79,null],[11,"add","","",78,null],[11,"add","","",78,null],[11,"add","","",80,null],[11,"add","","",80,null],[11,"add","","",78,null],[11,"add","","",78,null],[11,"add","","",78,null],[11,"add","","",78,null],[11,"eq","","",78,null],[11,"ne","","",78,null],[11,"eq","","",81,null],[11,"ne","","",81,null],[11,"index_mut","","",80,null],[11,"index_mut","","",78,null],[11,"index_mut","","",81,null],[11,"fmt","","",2,null],[11,"fmt","","",78,null],[11,"fmt","","",79,null],[11,"fmt","","",80,null],[11,"fmt","","",81,null],[11,"into_iter","","",79,null],[11,"into_iter","","",80,null],[11,"into_iter","","",81,null],[11,"sub_assign","","",78,null],[11,"sub_assign","","",78,null],[11,"sub_assign","","",80,null],[11,"sub_assign","","",80,null],[11,"sub_assign","","",78,null],[11,"sub_assign","","",78,null],[11,"sub_assign","","",80,null],[11,"sub_assign","","",80,null],[11,"sub_assign","","",80,null],[11,"sub_assign","","",80,null],[11,"sub_assign","","",80,null],[11,"sub_assign","","",80,null],[11,"sub_assign","","",78,null],[11,"sub_assign","","",78,null],[11,"sub_assign","","",78,null],[11,"sub_assign","","",78,null],[11,"sub_assign","","",81,null],[11,"sub_assign","","",81,null],[11,"sub_assign","","",81,null],[11,"sub_assign","","",81,null],[11,"fmt","","Formats the Matrix for display.",78,null],[11,"fmt","","Displays the Vector.",81,null],[11,"from","","",81,{"inputs":[{"name":"vec"}],"output":{"name":"vector"}}],[11,"from","","",81,null],[11,"from","","",78,{"inputs":[{"name":"vector"}],"output":{"name":"matrix"}}],[11,"from","","",78,{"inputs":[{"name":"matrixslice"}],"output":{"name":"matrix"}}],[11,"from","","",78,{"inputs":[{"name":"matrixslicemut"}],"output":{"name":"matrix"}}],[11,"div","","",81,null],[11,"div","","",81,null],[11,"div","","",79,null],[11,"div","","",79,null],[11,"div","","",80,null],[11,"div","","",80,null],[11,"div","","",78,null],[11,"div","","",78,null],[11,"neg","","",78,null],[11,"neg","","",81,null],[11,"neg","","",79,null],[11,"neg","","",80,null],[11,"from_matrix","","Produce a `MatrixSlice` from a `Matrix`",79,null],[11,"from_raw_parts","","Creates a `MatrixSlice` from raw parts.",79,null],[11,"reslice","","Produce a `MatrixSlice` from an existing `MatrixSlice`.",79,null],[11,"from_matrix","","Produce a `MatrixSliceMut` from a mutable `Matrix`",80,null],[11,"from_raw_parts","","Creates a `MatrixSliceMut` from raw parts.",80,null],[11,"reslice","","Produce a `MatrixSliceMut` from an existing `MatrixSliceMut`.",80,null],[11,"new","","Constructor for Vector struct.",81,{"inputs":[{"name":"u"}],"output":{"name":"vector"}}],[11,"size","","Returns the size of the Vector.",81,null],[11,"data","","Returns a non-mutable reference to the underlying data.",81,null],[11,"mut_data","","Returns a mutable slice of the underlying data.",81,null],[11,"into_vec","","Consumes the Vector and returns the Vec of data.",81,null],[11,"iter","","Returns an iterator over the Vector&#39;s data.",81,null],[11,"iter_mut","","Returns an iterator over mutable references to the Vector&#39;s data.",81,null],[11,"apply","","Applies a function to each element in the vector.",81,null],[11,"argmax","","Find the argmax of the Vector.",81,null],[11,"argmin","","Find the argmin of the Vector.",81,null],[11,"select","","Select elements from the Vector and form a new Vector from them.",81,null],[11,"zeros","","Constructs Vector of all zeros.",81,{"inputs":[{"name":"usize"}],"output":{"name":"vector"}}],[11,"ones","","Constructs Vector of all ones.",81,{"inputs":[{"name":"usize"}],"output":{"name":"vector"}}],[11,"dot","","Compute dot product with specified Vector.",81,null],[11,"sum","","The sum of the vector.",81,null],[11,"elemul","","The elementwise product of two vectors.",81,null],[11,"elediv","","The elementwise division of two vectors.",81,null],[11,"mean","","The mean of the vector.",81,null],[11,"variance","","The variance of the vector.",81,null]],"paths":[[8,"BaseMatrix"],[8,"BaseMatrixMut"],[4,"Axes"],[8,"Metric"],[3,"MinMaxScaler"],[3,"Standardizer"],[3,"Shuffler"],[8,"Transformer"],[8,"Invertible"],[3,"DBSCAN"],[8,"Criterion"],[8,"LinkFunc"],[3,"GenLinearModel"],[3,"Logit"],[3,"Log"],[3,"Identity"],[3,"Bernoulli"],[3,"Binomial"],[3,"Normal"],[3,"Poisson"],[3,"GaussianMixtureModel"],[4,"CovOption"],[3,"LinRegressor"],[3,"LogisticRegressor"],[3,"BaseLogisticRegressor"],[8,"Initializer"],[3,"KMeansClassifier"],[3,"Forgy"],[3,"RandomPartition"],[3,"KPlusPlus"],[8,"Criterion"],[3,"NeuralNet"],[3,"BaseNeuralNet"],[3,"BCECriterion"],[3,"MSECriterion"],[3,"GaussianProcess"],[8,"MeanFunc"],[3,"ConstMean"],[3,"SVM"],[8,"Distribution"],[3,"NaiveBayes"],[3,"Gaussian"],[3,"Bernoulli"],[3,"Multinomial"],[4,"ErrorKind"],[3,"Error"],[3,"GradientDesc"],[3,"StochasticGD"],[3,"AdaGrad"],[3,"RMSProp"],[3,"ConjugateGD"],[8,"Optimizable"],[8,"OptimAlgorithm"],[8,"ActivationFunc"],[3,"Sigmoid"],[3,"Linear"],[3,"Exp"],[8,"CostFunc"],[3,"MeanSqError"],[3,"CrossEntropyError"],[3,"KernelArith"],[3,"Linear"],[3,"Polynomial"],[3,"SquaredExp"],[3,"Exponential"],[3,"HyperTan"],[3,"Multiquadric"],[3,"RationalQuadratic"],[8,"Kernel"],[3,"KernelSum"],[3,"KernelProd"],[4,"Regularization"],[8,"SupModel"],[8,"UnSupModel"],[3,"Exponential"],[3,"Gaussian"],[8,"Distribution"],[3,"Dataset"],[3,"Matrix"],[3,"MatrixSlice"],[3,"MatrixSliceMut"],[3,"Vector"]]};
initSearch(searchIndex);
